{"mappings":"AAAA,MAAM,WAAW,CAAC;IACd,IAAI,QAAQ;IACZ,OAAO,MAAM,KAAK;AACtB;AAEA,MAAM,cAAc,CAAC;IACjB,MAAM,iBAAiB,SAAS;QAC5B,IAAI,QAAQ,MAAM,MAAM,MAAM;QAE9B,IAAI,CAAC,SAAS,QAAQ;YAClB,MAAM;YACN,MAAM,QAAQ,MAAM;QACxB;IACJ;AACJ;AAEA,MAAM,mBAAmB,CAAC,IAAI,OAAO;IACjC,IAAI,QAAQ,GAAG,cAAc,SAAS,MAAM,MAAM,KAAK,KAAK;IAE5D,IAAI,GAAG,cAAc,CAAC,CAAC,EAAE,UAAU,MAAM,CAAC,KAAK,MAC3C,GAAG,YAAY,GAAG,cAAc,CAAC,CAAC,EAAE,UAAU,MAAM,CAAC;IAEzD,IAAI,MAAM,UAAU,UAAU,IAC1B;QAAA,IAAI,GAAG,cAAc,CAAC,CAAC,EAAE,UAAU,MAAM,CAAC,KAAK,MAC3C,GAAG,YAAY;IACnB;AAER;AAEA,MAAM,SAAS;IACX,QAAQ,IAAI;IACZ,IAAI,aAAa,SAAS,cAAc;IACxC,IAAI,WAAW,SAAS,cAAc;IACtC,IAAI,UAAU,SAAS,cAAc;IAErC,IAAI,cAAc,SAAS,cAAc;IACzC,YAAY,UAAU,IAAI;IAC1B,YAAY,YAAY,CAAC,uCAAuC,CAAC;IAEjE,IAAI,aAAa,SAAS,cAAc;IACxC,WAAW,UAAU,IAAI;IACzB,WAAW,YAAY,CAAC,2BAA2B,CAAC;IAEpD,iBAAiB,YAAY,aAAa;IAC1C,iBAAiB,SAAS,cAAc,oBAAoB,YAAY;IACxE,iBAAiB,SAAS,YAAY;AAC1C;AAEA,SAAS,iBAAiB,oBAAoB;IAC1C,IAAI,SAAS,SAAS,cAAc;IACpC,IAAI,QAAQ,SAAS,cAAc;IACnC,IAAI,OAAO,SAAS,cAAc;IAClC,IAAI,MAAM,SAAS,cAAc;IAEjC,OAAO,iBAAiB,SAAS;QAC7B,IAAI,QAAQ,OAAO,MAAM,MAAM;QAE/B,IAAI;YAAC;YAAG;YAAI;SAAG,CAAC,SAAS,MAAM,WAAY,MAAM,GAAG,QAAQ,KAAM;YAC9D,IAAI,MAAM,MAAM;YAChB,OAAO,QAAQ,MAAM,KAAK,MAAM,MAAM;QAC1C;IACJ;IACA,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB","sources":["script.js"],"sourcesContent":["const useRegex = (tab) => {\r\n    let regex = /[0-9]+/i;\r\n    return regex.test(tab);\r\n}\r\n\r\nconst onlyNumbers = (input) => {\r\n    input.addEventListener(\"input\", () => {\r\n        let value = input.value.split(\"\");\r\n\r\n        if (!useRegex(value)) {\r\n            value.pop();\r\n            input.value = value.join();\r\n        }\r\n    })\r\n}\r\n\r\nconst checkWrongFormat = (qs, error, errorName) => {\r\n    let qsVal = qs.querySelector(\"input\").value.split(\" \").join(\"\");\r\n\r\n    if (qs.querySelector(`.${errorName}-error`) != null) {\r\n        qs.removeChild(qs.querySelector(`.${errorName}-error`));\r\n    }\r\n    if (isNaN(qsVal) || qsVal === \"\") {\r\n        if (qs.querySelector(`.${errorName}-error`) == null) {\r\n            qs.appendChild(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst verify = () => {\r\n    console.log(\"verifying...\")\r\n    let formNumber = document.querySelector(\".form_cb-number\");\r\n    let formDate = document.querySelector(\".cb-more_date\");\r\n    let formCvc = document.querySelector(\".cb-more_cvc\");\r\n\r\n    let numberError = document.createElement(\"div\");\r\n    numberError.classList.add(\"numberError-error\");\r\n    numberError.innerHTML = `<span>Wrong format, numbers only</span>`;\r\n\r\n    let blankError = document.createElement(\"div\");\r\n    blankError.classList.add(\"blankError-error\");\r\n    blankError.innerHTML = `<span>Can't be blank</span>`;\r\n\r\n    checkWrongFormat(formNumber, numberError, \"numberError\");\r\n    checkWrongFormat(formDate.querySelector(\".cb-date_inputs\"), blankError, \"blankError\");\r\n    checkWrongFormat(formCvc, blankError, \"blankError\");\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    let number = document.querySelector(\"input#cb-number\");\r\n    let month = document.querySelector(\"input#cb-date1\");\r\n    let year = document.querySelector(\"input#cb-date2\");\r\n    let cvc = document.querySelector(\"input#cb-cvc\")\r\n\r\n    number.addEventListener(\"input\", () => {\r\n        let value = number.value.split(\"\");\r\n\r\n        if ([5, 10, 15].includes(value.length) && (value.at(-1) !== \" \")) {\r\n            let pop = value.pop();\r\n            number.value = value.join(\"\") + \" \" + pop;\r\n        }\r\n    })\r\n    onlyNumbers(month);\r\n    onlyNumbers(year);\r\n    onlyNumbers(cvc);\r\n});"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}